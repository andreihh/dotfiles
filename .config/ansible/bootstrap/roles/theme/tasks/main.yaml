---
# file: roles/theme/tasks/main.yaml

- name: Combine theme vars
  ansible.builtin.set_fact:
    theme: "{{ theme | ansible.builtin.combine(theme_base, recursive=True) }}"

- name: Create theme directories
  become: false
  when: item.value.url is defined
  ansible.builtin.file:
    state: directory
    path: "{{ item.value.dest | ansible.builtin.dirname }}"
    mode: u=rwx
  loop: "{{ theme.files | ansible.builtin.dict2items }}"

- name: Download theme assets
  become: false
  when: item.value.url is defined
  ansible.builtin.get_url:
    url: "{{ item.value.url }}"
    dest: "{{ item.value.dest }}"
    mode: u=rw
  loop: "{{ theme.files | ansible.builtin.dict2items }}"

- name: Clone theme asset repositories
  become: false
  when: item.value.url is defined
  ansible.builtin.git:
    repo: "{{ item.value.url }}"
    version: "{{ item.value.version | default('main') }}"
    depth: 1
    dest: "{{ item.value.dest }}"
  loop: "{{ theme.repos | ansible.builtin.dict2items }}"

- name: Clear previous GTK theme
  become: false
  ansible.builtin.file:
    state: absent
    path: "{{ ansible_env.XDG_CONFIG_HOME }}/gtk-4.0/{{ item }}"
  loop:
    - assets
    - gtk.css
    - gtk-dark.css

- name: Install theme asset repositories
  become: false
  when: item.value.installer is defined
  vars:
    installer:
      bin: "{{ item.value.dest }}/{{ item.value.installer[0] }}"
      args: "{{ item.value.installer[1:] }}"
  changed_when: true
  ansible.builtin.command:
    argv: "{{ [installer.bin] + installer.args }}"
  loop: "{{ theme.repos | ansible.builtin.dict2items }}"

- name: Configure alacritty theme
  become: false
  ansible.builtin.template:
    src: templates/alacritty_theme.toml.j2
    dest: "{{ ansible_env.XDG_CONFIG_HOME }}/alacritty/theme.toml"
    mode: u=rw

- name: Configure ghostty theme
  become: false
  ansible.builtin.template:
    src: templates/ghostty_theme.j2
    dest: "{{ ansible_env.XDG_CONFIG_HOME }}/ghostty/theme"
    mode: u=rw

- name: Rebuild bat cache
  become: false
  changed_when: true
  ansible.builtin.command: bat cache --build

- name: Configure cava theme
  become: false
  block:
    - name: Clear cava theme
      ansible.builtin.lineinfile:
        state: absent
        path: "{{ ansible_env.XDG_CONFIG_HOME }}/cava/config"
        line: "\\s*color.theme\\s*=.*"

    - name: Set cava theme
      ansible.builtin.lineinfile:
        state: present
        create: true
        path: "{{ ansible_env.XDG_CONFIG_HOME }}/cava/config"
        line: "color.theme = '{{ theme.name }}'"
        mode: u=rw

- name: Configure shell theme
  become: false
  ansible.builtin.template:
    src: templates/shell_theme.sh.j2
    dest: "{{ ansible_env.XDG_CONFIG_HOME }}/profile.d/10-theme.sh"
    mode: u=rw

- name: Configure Gnome theme
  become: false
  community.general.dconf:
    key: "{{ item.key }}"
    value: "{{ item.value | string }}"
  loop:
    - key: /org/gnome/desktop/interface/color-scheme
      value: "'prefer-{{ theme.mode }}'"
    - key: /org/gnome/desktop/interface/accent-color
      value: "'{{ theme.accent }}'"
    - key: /org/gnome/desktop/interface/cursor-theme
      value: "'{{ theme.cursor }}'"
    - key: /org/gnome/desktop/interface/icon-theme
      value: "'{{ theme.icons }}'"
    - key: /org/gnome/desktop/interface/gtk-theme
      value: "'{{ theme.gtk }}'"
    - key: /org/gnome/desktop/background/picture-uri
      value: "'file://{{ theme.files.wallpaper.dest }}'"
    - key: /org/gnome/desktop/background/picture-uri-dark
      value: "'file://{{ theme.files.wallpaper.dest }}'"

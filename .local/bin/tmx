#!/bin/sh
#
# Creates and attaches to the specified `tmux` session, or to the last session
# if none is specified, or to the `admin` session if no sessions exist.

# Exit if any command fails.
set -e

usage() {
  cat << EOF
Usage: $0 [-h] [-l] [-s SESSION]

Options:
  -l Start as a login shell.
  -s Session to attach to. Defaults to last session, or 'admin' if none exists.
  -h Print this message and exit.
EOF
}

while getopts 'ls:h' option; do
  case "${option}" in
    l) login=true ;;
    s) session="${OPTARG}" ;;
    h) usage && exit 0 ;;
    *) usage && exit 1 ;;
  esac
done

if [ -n "${login}" ]; then
  # Execute this script with the user's default login shell to ensure the
  # environment is initialized properly for the remote `tmux` config.
  shell="$(getent passwd "${USER}" | cut -d : -f 7)"
  exec "${shell}" -lc "'$0' ${session:+'-s' "'${session}'"}"
fi

if [ -z "${TMUX}" ]; then
  # Try to attach to session, else create and attach to it (default `admin`).
  tmux attach -t "${session}" 2> /dev/null || tmux new -A -s "${session:-admin}"
elif [ -n "${session}" ]; then
  # Create session if it doesn't exist, then switch to it.
  tmux has -t "${session}" 2> /dev/null || tmux new -d -s "${session}"
  tmux switch -t "${session}"
fi

#!/bin/sh
#
# Manages encrypted incremental backups for:
# - dotfiles
# - all directories starting with an uppercase letter from the home directory
#
# See https://restic.readthedocs.io/en/latest/.

# Exit if any command fails.
set -e

usage() {
  cat << EOF
Usage: $0 [-h] [-n] [-b|-r] -d DIR

Options:
  -n  Perform a dry run (simulate actions, but do not execute them).
  -c  Check backup integrity from the specified directory (default operation).
  -i  Initialize backup to the specified directory.
  -b  Back up system to the specified directory.
  -r  Restore system from the specified directory.
  -d  Backup directory. Use 'rclone:REMOTE:PATH' for cloud backup.
  -h  Print this message and exit.
EOF
}

operation='check'
while getopts 'ncibrd:h' option; do
  case "${option}" in
    n) dry_run=true ;;
    c) operation='check' ;;
    i) operation='init' ;;
    b) operation='backup' ;;
    r) operation='restore' ;;
    d) backup_dir="$(readlink -f "${OPTARG}")" ;;
    h) usage && exit 0 ;;
    *) usage && exit 1 ;;
  esac
done

[ -z "${backup_dir}" ] && echo "Invalid backup directory!" && exit 1
export RESTIC_REPOSITORY="${backup_dir}"

echo "Ensuring dependencies are installed..."
for dep in 'restic' 'rclone'; do
  ! has-cmd "${dep}" && install-pkg "${dep}"
done

[ -n "${dry_run}" ] && echo "Performing a dry run!"

dotfiles_relpath="${XDG_CONFIG_HOME:-${HOME}/.config}/dotfiles"
dotfiles_relpath="$(echo "${dotfiles_relpath}" | sed "s:^${HOME}/::")"

case "${operation}" in
  check)
    echo "Checking backup at '${RESTIC_REPOSITORY}'"
    restic -v check
    ;;
  init)
    echo "Initializing backup at '${RESTIC_REPOSITORY}'..."
    [ -n "${dry_run}" ] || restic -v init
    ;;
  backup)
    echo "Backing up '${HOME}' to '${RESTIC_REPOSITORY}'..."
    cd "${HOME}"
    restic -v backup ${dry_run:+'-n'} "${dotfiles_relpath}" [A-Z]*

    echo "Pruning old snapshots from '${RESTIC_REPOSITORY}'..."
    restic -v forget ${dry_run:+'-n'} --prune --keep-last 3
    ;;
  restore)
    echo "Restoring '${RESTIC_REPOSITORY}' to '${HOME}'..."
    restic -v restore ${dry_run:+'--dry-run'} --target "${HOME}" latest
    ;;
  *) echo "Invalid operation '${operation}'!" && exit 1 ;;
esac

echo "Done!"
